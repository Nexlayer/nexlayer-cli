{
  "version": "1.2",
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Nexlayer YAML Template Schema Documentation (v1.2)",
    "description": "This schema defines the structure of the nexlayer.yaml file used to deploy full-stack applications on Nexlayer Cloud. Nexlayer Cloud simplifies Kubernetes deployments by handling service discovery, storage, and scaling automatically. This schema supports features such as pods, persistent storage, secrets management, environment variables, service ports, and private registry authentication.",
    "type": "object",
    "required": ["application"],
    "properties": {
      "application": {
        "type": "object",
        "description": "Basic application information along with its services (pods) and optional private registry authentication.",
        "required": ["name", "pods"],
        "properties": {
          "name": {
            "type": "string",
            "description": "The unique name of your deployment/application."
          },
          "url": {
            "type": "string",
            "description": "A permanent domain for this deployment (optional)."
          },
          "registryLogin": {
            "type": "object",
            "description": "Authentication details for private container registries. This block is required if you are using private images; omit it for public images.",
            "required": ["registry", "username", "personalAccessToken"],
            "properties": {
              "registry": {
                "type": "string",
                "description": "The container registry storing the private images (e.g., 'ghcr.io' or 'docker.io')."
              },
              "username": {
                "type": "string",
                "description": "The username for registry authentication."
              },
              "personalAccessToken": {
                "type": "string",
                "description": "A read-only token for secure authentication with the registry."
              }
            }
          },
          "pods": {
            "type": "array",
            "minItems": 1,
            "description": "List of services (pods) that make up this application. Each pod represents a distinct part of your app (e.g., frontend, backend, database).",
            "items": {
              "type": "object",
              "required": ["name", "image"],
              "properties": {
                "name": {
                  "type": "string",
                  "pattern": "^[a-z][a-z0-9\\.\\-]*$",
                  "description": "Unique pod name. Must start with a lowercase letter and can include alphanumeric characters, '-' or '.'."
                },
                "path": {
                  "type": "string",
                  "description": "The public-facing URL path where this pod is accessible (e.g., '/' for a frontend, '/api' for a backend service)."
                },
                "image": {
                  "type": "string",
                  "description": "Docker image reference. Use the `<% REGISTRY %>` placeholder for private images (e.g., `<% REGISTRY %>/someUser1234/image:tag`)."
                },
                "volumes": {
                  "type": "array",
                  "description": "Persistent storage volumes attached to this pod (optional). Use for storing database files, logs, or any data that should persist between restarts.",
                  "items": {
                    "type": "object",
                    "required": ["name", "size", "mountPath"],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "A unique volume name."
                      },
                      "size": {
                        "type": "string",
                        "description": "The allocated storage size (e.g., '1Gi')."
                      },
                      "mountPath": {
                        "type": "string",
                        "description": "The path inside the container where the volume is mounted."
                      }
                    }
                  }
                },
                "secrets": {
                  "type": "array",
                  "description": "Secrets securely injected into the pod (optional). Use for API keys, passwords, and other sensitive configurations.",
                  "items": {
                    "type": "object",
                    "required": ["name", "data", "mountPath", "fileName"],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The unique name of the secret."
                      },
                      "data": {
                        "type": "string",
                        "description": "The secret content, provided either in plaintext or as a Base64-encoded string."
                      },
                      "mountPath": {
                        "type": "string",
                        "description": "The directory inside the pod where the secret is stored."
                      },
                      "fileName": {
                        "type": "string",
                        "description": "The file name that will be used for the secret inside the pod."
                      }
                    }
                  }
                },
                "vars": {
                  "type": "array",
                  "description": "Environment variables for configuring the pod (optional). Supports dynamic placeholders such as `<pod-name>.pod` and `<% URL %>` for auto-generated values.",
                  "items": {
                    "type": "object",
                    "required": ["key", "value"],
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The environment variable key."
                      },
                      "value": {
                        "type": "string",
                        "description": "The environment variable value."
                      }
                    }
                  }
                },
                "servicePorts": {
                  "type": "array",
                  "description": "List of ports that this pod exposes for service communication (optional).",
                  "items": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535,
                    "description": "A valid port number (e.g., 3000, 5432)."
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
