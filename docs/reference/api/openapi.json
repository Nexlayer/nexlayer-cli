{
  "openapi": "3.0.0",
  "info": {
    "title": "Nexlayer API",
    "description": "API for managing deployments, feedback, and custom domains in the Nexlayer Application.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://app.staging.nexlayer.io"
    }
  ],
  "paths": {
    "/startUserDeployment/{applicationID}": {
      "post": {
        "tags": ["Deployment"],
        "summary": "Start a user deployment by uploading a YAML configuration file",
        "description": "Initiates a deployment for a user's application using a YAML configuration file uploaded via `--data-binary`. The YAML must follow the Nexlayer schema (see documentation for details). The `applicationID` parameter is optional; if omitted, the default application tied to the user's profile is used.",
        "operationId": "startUserDeployment",
        "parameters": [
          {
            "name": "applicationID",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the application to deploy. Optional; defaults to the user's profile application if not specified."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "text/x-yaml": {
              "schema": {
                "type": "string",
                "format": "binary"
              },
              "example": "# Example YAML: See https://github.com/Nexlayer/templates/blob/main/new-readme.md"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deployment started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/startUserDeploymentResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "message": "Deployment started successfully",
                      "namespace": "fantastic-fox",
                      "url": "https://fantastic-fox-my-mern-app.alpha.nexlayer.ai"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid YAML or missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid YAML format or missing required fields."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An unexpected error occurred on the server."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feedback": {
      "post": {
        "tags": ["Feedback"],
        "summary": "Send feedback to Nexlayer",
        "description": "Submits user feedback about the Nexlayer application in JSON format. The request must include a 'text' field with the feedback message.",
        "operationId": "sendFeedback",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/feedback"
              },
              "examples": {
                "feedback": {
                  "value": {
                    "text": "Great tool, but needs more documentation!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback received successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Feedback received successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid feedback",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Feedback text is required."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An unexpected error occurred on the server."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/saveCustomDomain/{applicationID}": {
      "post": {
        "tags": ["Domain Management"],
        "summary": "Save a custom domain for an application",
        "description": "Associates a custom domain with the specified application. The domain must be a valid string and properly configured in DNS settings.",
        "operationId": "saveCustomDomain",
        "parameters": [
          {
            "name": "applicationID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the application to associate with the custom domain."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveCustomDomainRequestBody"
              },
              "examples": {
                "domain": {
                  "value": {
                    "domain": "mydomain.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Custom domain saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveCustomDomainResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid domain format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid domain format. Please provide a valid domain name."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An unexpected error occurred on the server."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getDeployments/{applicationID}": {
      "get": {
        "tags": ["Deployment"],
        "summary": "Get all deployments for an application",
        "description": "Retrieves a list of all deployments for the specified application ID, including details like namespace, template ID, and status.",
        "operationId": "getDeployments",
        "parameters": [
          {
            "name": "applicationID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the application whose deployments are being retrieved."
          }
        ],
        "responses": {
          "200": {
            "description": "Deployments retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getDeploymentsResponse"
                },
                "examples": {
                  "deployments": {
                    "value": {
                      "deployments": [
                        {
                          "namespace": "ecstatic-frog",
                          "templateID": "0001",
                          "templateName": "K-d chat",
                          "deploymentStatus": "running"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid application ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid application ID."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An unexpected error occurred on the server."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getDeploymentInfo/{namespace}/{applicationID}": {
      "get": {
        "tags": ["Deployment"],
        "summary": "Get detailed info for a specific deployment",
        "description": "Retrieves detailed information about a specific deployment identified by its namespace and application ID, including status and template details.",
        "operationId": "getDeploymentInfo",
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The namespace of the deployment to retrieve."
          },
          {
            "name": "applicationID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the application associated with the deployment."
          }
        ],
        "responses": {
          "200": {
            "description": "Deployment info retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getDeploymentInfoResponse"
                },
                "examples": {
                  "deployment": {
                    "value": {
                      "deployment": {
                        "namespace": "ecstatic-frog",
                        "templateID": "0001",
                        "templateName": "K-d chat",
                        "deploymentStatus": "running"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid namespace or application ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid namespace or application ID."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An unexpected error occurred on the server."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY",
        "description": "API key required for authentication (assumed based on typical API patterns; adjust as needed)."
      }
    },
    "schemas": {
      "getDeploymentsResponse": {
        "type": "object",
        "properties": {
          "deployments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string",
                  "example": "ecstatic-frog"
                },
                "templateID": {
                  "type": "string",
                  "example": "0001"
                },
                "templateName": {
                  "type": "string",
                  "example": "K-d chat"
                },
                "deploymentStatus": {
                  "type": "string",
                  "example": "running"
                }
              }
            }
          }
        },
        "required": ["deployments"]
      },
      "getDeploymentInfoResponse": {
        "type": "object",
        "properties": {
          "deployment": {
            "type": "object",
            "properties": {
              "namespace": {
                "type": "string",
                "example": "ecstatic-frog"
              },
              "templateID": {
                "type": "string",
                "example": "0001"
              },
              "templateName": {
                "type": "string",
                "example": "K-d chat"
              },
              "deploymentStatus": {
                "type": "string",
                "example": "running"
              }
            }
          }
        },
        "required": ["deployment"]
      },
      "startUserDeploymentResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Deployment started successfully"
          },
          "namespace": {
            "type": "string",
            "example": "fantastic-fox"
          },
          "url": {
            "type": "string",
            "example": "https://fantastic-fox-my-mern-app.alpha.nexlayer.ai"
          }
        },
        "required": ["message", "namespace", "url"]
      },
      "saveCustomDomainRequestBody": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "example": "mydomain.com"
          }
        },
        "required": ["domain"]
      },
      "saveCustomDomainResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Custom domain saved successfully"
          }
        },
        "required": ["message"]
      },
      "feedback": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "example": "Sample text"
          }
        },
        "required": ["text"]
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}