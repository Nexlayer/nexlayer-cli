package templates

import (
	"bytes"
	"text/template"
)

// MERN stack template with AI optimizations
const MERNTemplate = `# Generated by Nexlayer AI Wizard
# Optimized for performance and cost-efficiency

application:
  template:
    name: mongodb-express-react-nodejs
    deploymentName: {{ .AppName }}

    # AI-recommended resource configuration
    resources:
      requests:
        cpu: 100m     # Recommended baseline for MERN stack
        memory: 256Mi # Optimal for development workloads
      limits:
        cpu: 500m     # Based on typical MERN usage patterns
        memory: 512Mi # Prevents memory leaks and OOM

    # AI-recommended scaling configuration
    autoscaling:
      enabled: true
      minReplicas: 1  # Minimum to ensure availability
      maxReplicas: 5  # Scale based on demand
      targetCPUUtilization: 70  # Optimal balance

    # AI-optimized pod configurations
    pods:
      # Database pod with optimized settings
      - type: database
        name: Mongodb
        exposeHttp: false  # Security best practice
        tag: ghcr.io/nexlayer/mongodb:latest
        resources:  # Database-specific resources
          requests:
            cpu: 200m
            memory: 512Mi
        vars:
          - key: MONGO_INITDB_ROOT_USERNAME
            value: mongo
          - key: MONGO_INITDB_ROOT_PASSWORD
            value: passw0rd  # TODO: Use secrets management
          - key: MONGO_INITDB_DATABASE
            value: todo

      # Backend pod with optimized settings
      - type: express
        name: express
        exposeHttp: false  # Internal service
        tag: ghcr.io/nexlayer/express-backend:latest
        resources:  # API server resources
          requests:
            cpu: 100m
            memory: 256Mi
        vars:
          - key: MONGODB_URL
            value: mongodb://mongo:passw0rd@mongodb:27017/todo

      # Frontend pod with optimized settings
      - type: nginx
        name: frontend
        exposeHttp: true  # Public-facing service
        tag: ghcr.io/nexlayer/mern-frontend:latest
        resources:  # Static file server resources
          requests:
            cpu: 50m
            memory: 128Mi
        vars:
          - key: EXPRESS_URL
            value: http://express:3000`

// TemplateData holds data for template rendering
type TemplateData struct {
	AppName string
}

// RenderMERNTemplate renders the MERN stack template with the given data
func RenderMERNTemplate(data TemplateData) (string, error) {
	tmpl, err := template.New("mern").Parse(MERNTemplate)
	if err != nil {
		return "", err
	}

	var buf bytes.Buffer
	if err := tmpl.Execute(&buf, data); err != nil {
		return "", err
	}

	return buf.String(), nil
}
